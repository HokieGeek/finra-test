#!/bin/bash

server="http://localhost:8080/v1"

tmpFiles=()
tmp() {
    f=$(mktemp)
    tmpFiles+=(${f})
    echo ${f}
}
trap 'rm -rf ${tmpFiles[@]}' EXIT

declare -A uploadedFiles
declare -A uploadedFilesParams

genMetadata() {
    local f=$1
    stat --printf="user=%U\npermissions=%a\ncreated=%Y" $1
}

getMetadataFromJSON() {
    # TODO
    :
}

uploadFile() {
    # local created=$(tmp)
    local created=$1

    ## Generate random data for the file
    cat << EOF > ${created}
    $(strings /dev/urandom | grep -o '[[:alnum:]]' | head -n $((RANDOM%100)) | tr -d '\n')
EOF

    ## Create some parameters
    params=()
    for param in $(genMetadata ${created}); do
        params+=("-F" "${param}")
    done

    id=$(curl --silent \
            -F "file=@${created}" \
            "${params[@]}" \
        ${server}/upload | sed -r 's/[{}]//g;s/.*:"([^"]*)"$/\1/')

    echo ${id}
}

verifyFile() {
    local id=$1

    # TODO
    curl --silent ${server}/metadata/${id}
    echo ""

    downloaded=$(tmp)
    curl --silent -o ${downloaded} ${server}/file/${id}

    diff ${uploadedFiles[${id}]} ${downloaded}
}

## Generate a random number of files between 1 and 10
for i in $(seq 1 $((RANDOM%11))); do
    created=$(tmp)
    id=$(uploadFile ${created})
    uploadedFiles[${id}]=${created}
done

## Verify each file created
for id in "${!uploadedFiles[@]}"; do
    verifyFile ${id} || exit 1
done
